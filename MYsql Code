MySQL  Query

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email_id VARCHAR(255) NOT NULL UNIQUE,
    phone_number BIGINT UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    login_id VARCHAR(255) NOT NULL UNIQUE,
    INDEX(email_id),
    INDEX(login_id)
);

CREATE TABLE projects (
    id INT AUTO_INCREMENT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    project_description VARCHAR(255),
    user_id INT NOT NULL,
    country VARCHAR(10),
    FOREIGN KEY (user_id) REFERENCES users(id),
    INDEX(project_name)
);

CREATE TABLE urls (
    id INT AUTO_INCREMENT PRIMARY KEY,
    url VARCHAR(255),
    project_id INT,
    country VARCHAR(255) NOT NULL,
    FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE,
    UNIQUE KEY idx_unique_url_per_project (url, project_id),
    INDEX(url)
);

CREATE TABLE keywords (
    id INT AUTO_INCREMENT PRIMARY KEY,
    keyword VARCHAR(255),
    project_id INT,
    url_id INT NOT NULL,
    FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE,
    FOREIGN KEY (url_id) REFERENCES urls(id) ON DELETE CASCADE,
    UNIQUE KEY idx_unique_keyword_per_project (keyword, project_id),
    INDEX(keyword)
);

CREATE TABLE ranks (
    id INT AUTO_INCREMENT PRIMARY KEY,
    url_id INT,
    keyword_id INT,
    project_id INT,
    ranks INT,
    page_number INT,
    country VARCHAR(255) NOT NULL,
    date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (url_id) REFERENCES urls(id) ON DELETE CASCADE,
    FOREIGN KEY (keyword_id) REFERENCES keywords(id) ON DELETE CASCADE,
    FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE,
    UNIQUE KEY idx_url_keyword_project (url_id, keyword_id, project_id));

